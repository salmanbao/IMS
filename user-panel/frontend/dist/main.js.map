{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/components.module.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/helpers/error.interceptor.ts","webpack:///./src/app/helpers/jwt.interceptor.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/modules/material.module.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/certificate.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/app/shared/footer/footer.component.css","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/sidebar/sidebar.component.css","webpack:///./src/app/shared/sidebar/sidebar.component.html","webpack:///./src/app/shared/sidebar/sidebar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./lazyloading/admin-panel/admin-layout.module\": [\n\t\t\"./src/app/lazyloading/admin-panel/admin-layout.module.ts\",\n\t\t\"lazyloading-admin-panel-admin-layout-module\"\n\t],\n\t\"./lazyloading/certificates/certificates.module\": [\n\t\t\"./src/app/lazyloading/certificates/certificates.module.ts\",\n\t\t\"lazyloading-certificates-certificates-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\n  .button {\\n    display: flex;\\n    justify-content: flex-end;\\n  }\\n  .menu-spacer {\\n    flex: 1 1 auto;\\n  }\"","module.exports = \"<app-sidebar *ngIf='islogged'>\\n    <router-outlet></router-outlet>\\n</app-sidebar>\\n<div fxLayout=\\\"row\\\" *ngIf='!auth.loggedIn()'>\\n    <mat-toolbar color=\\\"primary\\\">\\n        <mat-toolbar-row>\\n            <button mat-icon-button fxShow=\\\"true\\\" fxHide.gt-sm>\\n                <mat-icon>menu</mat-icon>\\n            </button>\\n            <span>IMS</span>\\n            <span class=\\\"menu-spacer\\\"></span>\\n            <div fxShow=\\\"true\\\" fxHide.lt-md>\\n\\n                <a routerLink=\\\"/login\\\" mat-button [routerLinkActive]=\\\"['active']\\\"\\n                    [routerLinkActiveOptions]=\\\"{exact:true}\\\">Login</a>\\n                <a routerLink=\\\"/register\\\" mat-button [routerLinkActive]=\\\"['active']\\\"\\n                    [routerLinkActiveOptions]=\\\"{exact:true}\\\">Register</a>\\n            </div>\\n        </mat-toolbar-row>\\n    </mat-toolbar>\\n\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewChecked {\n  islogged;\n  constructor(private auth: AuthenticationService, private cdRef: ChangeDetectorRef) { }\n\n  ngAfterViewChecked() {\n    this.islogged = this.auth.loggedIn();\n    this.cdRef.detectChanges();\n  }\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppRoutingModule } from './app.routing';\nimport { ComponentsModule } from './components/components.module';\nimport { AppComponent } from './app.component';\nimport {\n  AgmCoreModule\n} from '@agm/core';\nimport { BrowserModule, DomSanitizer } from '@angular/platform-browser';\nimport { MaterialModule } from './modules/material.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatIconRegistry } from '@angular/material';\nimport { LoginComponent } from './login/login.component';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { SharedModule } from './shared/shared.module';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { CertificateService } from './services/certificate.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { UserService } from './services/user.service';\n\n\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    ComponentsModule,\n    RouterModule,\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'YOUR_GOOGLE_MAPS_API_KEY'\n    }),\n    SharedModule\n  ],\n  exports: [\n    FormsModule,\n    MaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    AuthenticationService,\n    AuthGuard,\n    CertificateService,\n    UserService,\n    // provider used to create fake backend\n    //fakeBackendProvider,\n    FormBuilder\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('/assets/mdi.svg')); // Or whatever path you placed mdi.svg at\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterComponent } from './register/register.component';\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full',\n    canActivate: [AuthGuard]\n  }, {\n    path: 'dashboard',\n    loadChildren: './lazyloading/admin-panel/admin-layout.module#AdminLayoutModule',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'certificates', loadChildren: './lazyloading/certificates/certificates.module#CertificatesModule',\n    canActivate: [AuthGuard]\n  }\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n  ],\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from 'app/modules/material.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MaterialModule\n  ],\n  declarations: [\n    \n  ],\n  exports: [\n    \n  ]\n})\nexport class ComponentsModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from 'app/services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router,\n    private authService: AuthenticationService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n          // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n    }\n\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from 'app/services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: { \n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","module.exports = \"<mat-drawer-container>\\n    <mat-drawer #snav [mode]=\\\"'side'\\\">\\n\\n    </mat-drawer>\\n\\n    <mat-drawer-content>\\n        <mat-card>\\n            <mat-card-title>Login</mat-card-title>\\n            <mat-card-content>\\n                <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <p>\\n                        <mat-form-field>\\n                            <mat-label>Username</mat-label>\\n                            <input type=\\\"text\\\" matInput formControlName=\\\"username\\\">\\n                            <mat-icon matPrefix>person</mat-icon>\\n                        </mat-form-field>\\n                    </p>\\n\\n                    <p>\\n                        <mat-form-field>\\n                            <mat-label>Password</mat-label>\\n                            <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\n                            <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\n                                [attr.aria-pressed]=\\\"hide\\\">\\n                                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                            </button>\\n                            <mat-icon matPrefix>vpn_key</mat-icon>\\n                        </mat-form-field>\\n                    </p>\\n\\n                    <p *ngIf=\\\"error\\\" class=\\\"error\\\">\\n                        {{ error }}\\n                    </p>\\n\\n                    <div class=\\\"button\\\">\\n                        <button  mat-raised-button color=\\\"warn\\\">Login</button>\\n                    </div>\\n\\n                </form>\\n            </mat-card-content>\\n        </mat-card>\\n    </mat-drawer-content>\\n</mat-drawer-container>\"","module.exports = \"host {\\n  display: flex;\\n  justify-content: center;\\n  margin: 100px 0px; }\\n\\n.mat-form-field {\\n  width: 100%;\\n  min-width: 300px; }\\n\\nmat-card-title,\\nmat-card-content {\\n  display: flex;\\n  justify-content: center; }\\n\\n.error {\\n  padding: 16px;\\n  width: 300px;\\n  color: white;\\n  background-color: red; }\\n\\ninput.example-right-align::-webkit-outer-spin-button,\\ninput.example-right-align::-webkit-inner-spin-button {\\n  display: none; }\\n\\ninput.example-right-align {\\n  -moz-appearance: textfield; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from 'app/services/authentication.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    loginForm: FormGroup;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n    hide = true;\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService) { }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // reset login status\n        this.authenticationService.logout();\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.authenticationService.authenticateUser({ username: this.f.username.value, password: this.f.password.value })\n            .subscribe(data => {\n                if (data['success']) {\n                    this.authenticationService.storeUserData(data['token'], data['user']);\n                    this.router.navigate(['dashboard']);\n                } else {\n                    this.error = 'Unable to login';\n                }\n            },\n                error => {\n                    this.error = error;\n                }\n            );\n    }\n\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { NgModule } from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule, \n\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n\n","module.exports = \"<mat-drawer-container>\\n  <mat-drawer #snav [mode]=\\\"'side'\\\">\\n\\n  </mat-drawer>\\n\\n  <mat-drawer-content>\\n    <mat-card>\\n      <mat-card-title>Registeration Panel</mat-card-title>\\n      <mat-card-content>\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <p>\\n            <mat-form-field>\\n              <mat-label>Name</mat-label>\\n              <input matInput formControlName=\\\"name\\\">\\n            </mat-form-field>\\n          </p>\\n          <p>\\n              <mat-form-field>\\n                <mat-label>Email</mat-label>\\n                <input matInput formControlName=\\\"email\\\">\\n              </mat-form-field>\\n            </p>\\n          <p>\\n            <mat-form-field>\\n              <mat-label>Username</mat-label>\\n              <input type=\\\"text\\\" matInput formControlName=\\\"username\\\">\\n            </mat-form-field>\\n          </p>\\n\\n          <p>\\n            <mat-form-field>\\n              <mat-label>Password</mat-label>\\n              <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\n              <button mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\n                [attr.aria-pressed]=\\\"hide\\\">\\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n              </button>\\n            </mat-form-field>\\n          </p>\\n\\n          <p *ngIf=\\\"error\\\" class=\\\"error\\\">\\n            {{ error }}\\n          </p>\\n\\n          <div class=\\\"button\\\">\\n            <button [disabled]=\\\"loading\\\" mat-raised-button color=\\\"warn\\\">Login</button>\\n          </div>\\n\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  </mat-drawer-content>\\n</mat-drawer-container>\"","module.exports = \"host {\\n  display: flex;\\n  justify-content: center;\\n  margin: 100px 0px; }\\n\\n.mat-form-field {\\n  width: 100%;\\n  min-width: 300px; }\\n\\nmat-card-title,\\nmat-card-content {\\n  display: flex;\\n  justify-content: center; }\\n\\n.error {\\n  padding: 16px;\\n  width: 300px;\\n  color: white;\\n  background-color: red; }\\n\\ninput.example-right-align::-webkit-outer-spin-button,\\ninput.example-right-align::-webkit-inner-spin-button {\\n  display: none; }\\n\\ninput.example-right-align {\\n  -moz-appearance: textfield; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ValidateService } from 'app/services/validate.service';\nimport { AuthenticationService } from 'app/services/authentication.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  hide = true;\n  constructor(\n    private validateService: ValidateService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private _snackBar: MatSnackBar,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // reset login status\n    this.authenticationService.logout();\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    const user = {\n      name: this.f.name.value,\n      email: this.f.email.value,\n      username: this.f.username.value,\n      password: this.f.password.value\n    }\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      this.openSnackBar('Fill missing fields');\n      return;\n    }\n    // Required Fields\n    if (!this.validateService.validateRegister(user)) {\n      this.openSnackBar('Fill required fields');\n      return false;\n    }\n    // // Validate Email\n    // if (!this.validateService.validateEmail(user.email)) {\n    //   this.openSnackBar('Invalid email');\n    //   return false;\n    // }\n    this.loading = true;\n    // Register user\n    this.authenticationService.registerUser(user)\n      .subscribe(data => {\n        if (data['success)']) {\n          this.openSnackBar(data['msg']);\n        } else {\n          this.openSnackBar(data['msg']);\n          this.router.navigate(['/login']);\n        }\n      },\n        error => {\n          console.log(error)\n          this.openSnackBar(error);\n        }\n      );\n\n  }\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, 'Close', {\n      duration: 5000,\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { tokenNotExpired } from 'angular2-jwt';\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthenticationService {\n    baseUrl = 'http://localhost:8080/';\n    authToken: any;\n    user: any;\n\n    constructor(private http: HttpClient) { }\n\n    registerUser(user) {\n        return this.http.post(this.baseUrl + 'users/register', user)\n    }\n\n    authenticateUser(user) {\n        return this.http.post(this.baseUrl + 'users/authenticate', user)\n    }\n\n    getProfile() {\n        return this.http.get(this.baseUrl  + 'users/profile')\n    }\n\n    storeUserData(token, user) {\n        localStorage.setItem('id_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        this.authToken = token;\n        this.user = user;\n    }\n\n    loadToken() {\n        const token = localStorage.getItem('id_token');\n        this.authToken = token;\n    }\n\n    loggedIn() {\n        return tokenNotExpired('id_token');\n    }\n\n    logout() {\n        this.authToken = null;\n        this.user = null;\n        localStorage.clear();\n    }\n    getUser(){\n        let username = JSON.parse(localStorage.getItem('user'));\n        return username.username;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CertificateService {\n  addBirthUrl = 'http://localhost:8080/birth/add';\n  addMarriageUrl = 'http://localhost:8080/marriage/add';\n  addNationalIDUrl = 'http://localhost:8080/nationalid/add';\n  constructor(private http: HttpClient) { }\n  addBirth(cert: any) {\n    return this.http.post(this.addBirthUrl, cert);\n  }\n  addNationalID(cert: any) {\n    return this.http.post(this.addNationalIDUrl, cert);\n  }\n  addMarriage(cert: any) {\n    return this.http.post(this.addMarriageUrl, cert);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from 'app/models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  baseUrl = 'http://localhost:4000/'\n  constructor(private http: HttpClient) { }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'users', user);\n  }\n  getAllUsers() {\n    return this.http.get(this.baseUrl + 'getAllUsers');\n  }\n  getAdminCert() {\n    return this.http.get(this.baseUrl + 'getAdminCert')\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","module.exports = \"\"","module.exports = \"<footer class=\\\"footer \\\">\\n    <div class=\\\"container-fluid\\\">\\n        <nav class=\\\"pull-left\\\">\\n            <ul>\\n                <li>\\n                    <a href=\\\"/\\\">\\n                        Home\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"/\\\">\\n                        About Us\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"/\\\">\\n                        Blog\\n                    </a>\\n                </li>\\n                <li>\\n                    <a href=\\\"/\\\">\\n                        Licenses\\n                    </a>\\n                </li>\\n            </ul>\\n        </nav>\\n        <div class=\\\"copyright pull-right\\\">\\n            &copy;\\n            {{test | date: 'yyyy'}}, \\n            <a href=\\\"/\\\" target=\\\"_blank\\\">IMS</a> for a better identity.\\n        </div>\\n    </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  test : Date = new Date();\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from 'app/modules/material.module';\nimport { FooterComponent } from './footer/footer.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MaterialModule\n  ],\n  declarations: [\n    FooterComponent,\n    SidebarComponent\n  ],\n  exports: [\n    FooterComponent,\n    SidebarComponent\n  ]\n})\nexport class SharedModule { }\n","module.exports = \".button {\\n    display: flex;\\n    justify-content: flex-end;\\n  } \\n  .menu-spacer {\\n    flex: 1 1 auto;\\n  } \\n  mat-drawer-content{\\n    height: 100%;\\n  }\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n        <mat-toolbar-row>\\n            <button mat-icon-button (click)=\\\"snav.toggle()\\\" fxShow=\\\"true\\\" fxHide.gt-sm>\\n                <mat-icon>menu</mat-icon>\\n            </button>\\n            <span>IMS</span>\\n            <span class=\\\"menu-spacer\\\"></span>\\n            <div fxShow=\\\"true\\\" fxHide.lt-md>\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\n                            <mat-icon>account_circle</mat-icon>\\n                          </button>\\n                          <mat-menu #menu=\\\"matMenu\\\">\\n                            <button mat-menu-item>\\n                              <span>{{name}}</span>\\n                            </button>\\n                            <button mat-menu-item (click) = 'logout()'>\\n                              <span>Logout</span>\\n                            </button>\\n                          </mat-menu>\\n            </div>\\n        </mat-toolbar-row>\\n    </mat-toolbar>\\n    \\n    <div fxLayout=\\\"row\\\">\\n        <mat-drawer-container>\\n            <mat-drawer #snav [mode]=\\\"'side'\\\">\\n                <mat-nav-list>\\n                    <a mat-list-item [routerLink]=\\\"[nav.path]\\\" *ngFor=\\\"let nav of menuItems\\\">\\n                        <mat-icon color=\\\"primary\\\">fingerprint</mat-icon>\\n                        {{nav.title}}\\n                    </a>\\n                </mat-nav-list>\\n            </mat-drawer>\\n    \\n            <mat-drawer-content>\\n                <router-outlet></router-outlet>\\n                <div>\\n                    <app-footer></app-footer>\\n                </div>\\n            </mat-drawer-content>\\n        </mat-drawer-container>\\n    \\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'app/services/authentication.service';\nimport { Router } from '@angular/router';\ndeclare const $: any;\ndeclare interface RouteInfo {\n  path: string;\n  title: string;\n  icon: string;\n  class: string;\n}\nexport const ROUTES: RouteInfo[] = [\n  { path: '/dashboard', title: 'Dashboard', icon: 'fingerprint', class: '' },\n  { path: '/certificates', title: 'Certificates', icon: 'fingerprint', class: '' }\n];\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  menuItems: any[];\n  name: string;\n  constructor(\n    private auth: AuthenticationService,\n    private router: Router\n  ) { \n    this.getProfile();\n  }\n\n  ngOnInit() {\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\n  }\n\n  logout() {\n    this.auth.logout();\n    this.router.navigate(['/login']);\n  }\n  getProfile() {\n    let profile = JSON.parse(localStorage.getItem('user'));\n    this.name = profile['username'];\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}